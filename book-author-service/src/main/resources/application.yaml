server:
  port: 8081
spring:
  application:
    name: library

  cache:
    type: redis

  datasource:
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:library}"
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}

  sql:
    init:
      mode: always

  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: ${SHOW_SQL:true}   #  false in prod
        format_sql: ${FORMAT_SQL:true}
      jakarta:
        persistence:
          sharedCache:
            mode: UNSPECIFIED
    open-in-view: false

  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    clean-disabled: false

  data:
    redis:
      host: localhost
      port: 6379

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: object-service-group
#    topic:
#      request-topic: object-add-request
#      response-topic: object-add-response

logging:
  level:
    org.springframework: INFO
    org.springframework.cache: TRACE
    org.springframework.web: INFO
    ROOT: INFO
    org.zalando.logbook: TRACE
    org.hibernate.SQL: DEBUG

springdoc:
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:true}
    path: ${SWAGGER_PATH:/swagger-ui.html}

